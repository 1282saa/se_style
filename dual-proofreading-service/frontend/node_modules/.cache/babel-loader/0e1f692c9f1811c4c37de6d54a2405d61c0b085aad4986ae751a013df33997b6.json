{"ast":null,"code":"var _jsxFileName = \"/Users/yeong-gwang/Desktop/work/\\u1109\\u1165\\u110B\\u116E\\u11AF\\u1100\\u1167\\u11BC\\u110C\\u1166\\u1109\\u1175\\u11AB\\u1106\\u116E\\u11AB/\\u1100\\u1162\\u1107\\u1161\\u11AF\\u110C\\u1161\\u11A8\\u110B\\u1165\\u11B8/\\u1106\\u1161\\u11BD\\u110E\\u116E\\u11B7\\u1112\\u1167\\u11BC\\u1100\\u116D\\u110B\\u1167\\u11AF\\u1109\\u1175\\u1109\\u1173\\u1110\\u1166\\u11B7\\u1100\\u1162\\u1107\\u1161\\u11AF/dual-proofreading-service/frontend/src/components/SocialShareModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { socialMediaApi } from \"../services/api\";\n\n/**\n * 소셜 미디어 공유 모달 컴포넌트\n * @param {Object} props - 컴포넌트 속성\n * @param {string} props.articleId - 기사 ID\n * @param {string} props.correctionId - 교정 결과 ID\n * @param {Function} props.onClose - 모달 닫기 핸들러\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocialShareModal = ({\n  articleId,\n  correctionId,\n  onClose\n}) => {\n  _s();\n  const [platforms, setPlatforms] = useState([]);\n  const [selectedPlatforms, setSelectedPlatforms] = useState([]);\n  const [generatedPosts, setGeneratedPosts] = useState({});\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [isPublishing, setIsPublishing] = useState(false);\n  const [error, setError] = useState(null);\n  const [userId] = useState(\"user123\"); // 실제 환경에서는 사용자 인증 정보에서 가져와야 함\n\n  useEffect(() => {\n    // 연결된 소셜 계정 목록 가져오기\n    const fetchConnectedAccounts = async () => {\n      try {\n        const response = await socialMediaApi.getConnectedAccounts(userId);\n        setPlatforms(response.data.data || []);\n      } catch (err) {\n        console.error(\"소셜 계정 조회 오류:\", err);\n        setError(\"계정 정보를 불러오는데 실패했습니다\");\n      }\n    };\n    fetchConnectedAccounts();\n  }, [userId]);\n\n  // 플랫폼 선택/해제 처리\n  const handlePlatformToggle = platform => {\n    if (selectedPlatforms.includes(platform)) {\n      setSelectedPlatforms(selectedPlatforms.filter(p => p !== platform));\n    } else {\n      setSelectedPlatforms([...selectedPlatforms, platform]);\n    }\n  };\n\n  // 게시물 생성\n  const handleGenerate = async () => {\n    if (selectedPlatforms.length === 0) return;\n    setIsGenerating(true);\n    setError(null);\n    try {\n      const posts = {};\n\n      // 선택한 플랫폼별로 게시물 생성\n      for (const platform of selectedPlatforms) {\n        const response = await socialMediaApi.generatePost(articleId, {\n          platform,\n          correctionId,\n          options: {\n            hasImage: false,\n            // 필요시 이미지 포함 여부 설정\n            userId\n          }\n        });\n        if (response.data.success) {\n          posts[platform] = response.data.data;\n        }\n      }\n      setGeneratedPosts(posts);\n    } catch (err) {\n      console.error(\"게시물 생성 오류:\", err);\n      setError(\"소셜 미디어 게시물 생성에 실패했습니다\");\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  // 게시물 게시\n  const handlePublish = async () => {\n    setIsPublishing(true);\n    setError(null);\n    try {\n      const results = [];\n\n      // 생성된 게시물 게시\n      for (const platform of selectedPlatforms) {\n        if (generatedPosts[platform]) {\n          const response = await socialMediaApi.publishPost(generatedPosts[platform]._id, userId);\n          if (response.data.success) {\n            results.push(response.data.data);\n          }\n        }\n      }\n      if (results.length > 0) {\n        alert(`${results.length}개의 소셜 미디어에 게시되었습니다.`);\n        onClose();\n      } else {\n        setError(\"게시에 실패했습니다\");\n      }\n    } catch (err) {\n      console.error(\"게시 오류:\", err);\n      setError(\"게시 과정에서 오류가 발생했습니다\");\n    } finally {\n      setIsPublishing(false);\n    }\n  };\n\n  // 모달 외부 클릭 시 닫기\n  const handleOutsideClick = e => {\n    if (e.target.className === \"modal-overlay\") {\n      onClose();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    onClick: handleOutsideClick,\n    style: styles.overlay,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      style: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: styles.title,\n        children: \"\\uC18C\\uC15C \\uBBF8\\uB514\\uC5B4 \\uACF5\\uC720\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"platform-selection\",\n        style: styles.section,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: styles.sectionTitle,\n          children: \"\\uACF5\\uC720\\uD560 \\uD50C\\uB7AB\\uD3FC \\uC120\\uD0DD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), platforms.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.message,\n          children: \"\\uC5F0\\uACB0\\uB41C \\uC18C\\uC15C \\uBBF8\\uB514\\uC5B4 \\uACC4\\uC815\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.platformList,\n          children: platforms.map(platform => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.platformItem,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: platform.platform,\n              checked: selectedPlatforms.includes(platform.platform),\n              onChange: () => handlePlatformToggle(platform.platform)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: platform.platform,\n              style: styles.platformLabel,\n              children: [platform.platform, \" (\", platform.username, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this)]\n          }, platform.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), selectedPlatforms.length > 0 && !isGenerating && Object.keys(generatedPosts).length === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerate,\n        disabled: isGenerating,\n        style: styles.primaryButton,\n        children: isGenerating ? \"생성 중...\" : \"게시물 생성하기\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this), Object.keys(generatedPosts).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generated-posts\",\n        style: styles.section,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: styles.sectionTitle,\n          children: \"\\uC0DD\\uC131\\uB41C \\uAC8C\\uC2DC\\uBB3C \\uBBF8\\uB9AC\\uBCF4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), selectedPlatforms.map(platform => {\n          var _generatedPosts$platf;\n          return generatedPosts[platform] && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.postPreview,\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: styles.platformName,\n              children: platform\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: ((_generatedPosts$platf = generatedPosts[platform]) === null || _generatedPosts$platf === void 0 ? void 0 : _generatedPosts$platf.adaptedText) || \"\",\n              onChange: e => {\n                const updated = {\n                  ...generatedPosts\n                };\n                updated[platform].adaptedText = e.target.value;\n                setGeneratedPosts(updated);\n              },\n              style: styles.textarea,\n              rows: 5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 21\n            }, this)]\n          }, platform, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 19\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePublish,\n          disabled: isPublishing,\n          style: styles.primaryButton,\n          children: isPublishing ? \"게시 중...\" : \"선택한 플랫폼에 게시하기\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.error,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        style: styles.closeButton,\n        children: \"\\uB2EB\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n\n// 인라인 스타일\n_s(SocialShareModal, \"6nyFneFWSvjj7DvnBB2A0V8PGkw=\");\n_c = SocialShareModal;\nconst styles = {\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    zIndex: 1000\n  },\n  content: {\n    backgroundColor: \"#fff\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    width: \"90%\",\n    maxWidth: \"600px\",\n    maxHeight: \"90vh\",\n    overflow: \"auto\",\n    boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.2)\"\n  },\n  title: {\n    fontSize: \"24px\",\n    marginTop: 0,\n    marginBottom: \"20px\",\n    color: \"#333\"\n  },\n  section: {\n    marginBottom: \"20px\"\n  },\n  sectionTitle: {\n    fontSize: \"18px\",\n    marginTop: 0,\n    marginBottom: \"10px\",\n    color: \"#333\"\n  },\n  message: {\n    color: \"#666\",\n    fontStyle: \"italic\"\n  },\n  platformList: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"10px\"\n  },\n  platformItem: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  platformLabel: {\n    marginLeft: \"8px\",\n    color: \"#333\"\n  },\n  postPreview: {\n    marginBottom: \"15px\",\n    padding: \"10px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\"\n  },\n  platformName: {\n    margin: \"0 0 10px 0\",\n    color: \"#333\",\n    fontSize: \"16px\",\n    textTransform: \"capitalize\"\n  },\n  textarea: {\n    width: \"100%\",\n    padding: \"8px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\",\n    resize: \"vertical\",\n    fontFamily: \"inherit\",\n    fontSize: \"14px\"\n  },\n  primaryButton: {\n    backgroundColor: \"#007bff\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    padding: \"10px 15px\",\n    fontSize: \"14px\",\n    cursor: \"pointer\",\n    marginRight: \"10px\",\n    marginTop: \"10px\"\n  },\n  closeButton: {\n    backgroundColor: \"#6c757d\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    padding: \"10px 15px\",\n    fontSize: \"14px\",\n    cursor: \"pointer\"\n  },\n  error: {\n    backgroundColor: \"#f8d7da\",\n    color: \"#721c24\",\n    padding: \"10px\",\n    borderRadius: \"4px\",\n    marginBottom: \"15px\"\n  }\n};\nexport default SocialShareModal;\nvar _c;\n$RefreshReg$(_c, \"SocialShareModal\");","map":{"version":3,"names":["React","useState","useEffect","socialMediaApi","jsxDEV","_jsxDEV","SocialShareModal","articleId","correctionId","onClose","_s","platforms","setPlatforms","selectedPlatforms","setSelectedPlatforms","generatedPosts","setGeneratedPosts","isGenerating","setIsGenerating","isPublishing","setIsPublishing","error","setError","userId","fetchConnectedAccounts","response","getConnectedAccounts","data","err","console","handlePlatformToggle","platform","includes","filter","p","handleGenerate","length","posts","generatePost","options","hasImage","success","handlePublish","results","publishPost","_id","push","alert","handleOutsideClick","e","target","className","onClick","style","styles","overlay","children","content","title","fileName","_jsxFileName","lineNumber","columnNumber","section","sectionTitle","message","platformList","map","platformItem","type","id","checked","onChange","htmlFor","platformLabel","username","Object","keys","disabled","primaryButton","_generatedPosts$platf","postPreview","platformName","value","adaptedText","updated","textarea","rows","closeButton","_c","position","top","left","right","bottom","backgroundColor","display","justifyContent","alignItems","zIndex","borderRadius","padding","width","maxWidth","maxHeight","overflow","boxShadow","fontSize","marginTop","marginBottom","color","fontStyle","flexDirection","gap","marginLeft","border","margin","textTransform","resize","fontFamily","cursor","marginRight","$RefreshReg$"],"sources":["/Users/yeong-gwang/Desktop/work/서울경제신문/개발작업/맞춤형교열시스템개발/dual-proofreading-service/frontend/src/components/SocialShareModal.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { socialMediaApi } from \"../services/api\";\n\n/**\n * 소셜 미디어 공유 모달 컴포넌트\n * @param {Object} props - 컴포넌트 속성\n * @param {string} props.articleId - 기사 ID\n * @param {string} props.correctionId - 교정 결과 ID\n * @param {Function} props.onClose - 모달 닫기 핸들러\n */\nconst SocialShareModal = ({ articleId, correctionId, onClose }) => {\n  const [platforms, setPlatforms] = useState([]);\n  const [selectedPlatforms, setSelectedPlatforms] = useState([]);\n  const [generatedPosts, setGeneratedPosts] = useState({});\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [isPublishing, setIsPublishing] = useState(false);\n  const [error, setError] = useState(null);\n  const [userId] = useState(\"user123\"); // 실제 환경에서는 사용자 인증 정보에서 가져와야 함\n\n  useEffect(() => {\n    // 연결된 소셜 계정 목록 가져오기\n    const fetchConnectedAccounts = async () => {\n      try {\n        const response = await socialMediaApi.getConnectedAccounts(userId);\n        setPlatforms(response.data.data || []);\n      } catch (err) {\n        console.error(\"소셜 계정 조회 오류:\", err);\n        setError(\"계정 정보를 불러오는데 실패했습니다\");\n      }\n    };\n\n    fetchConnectedAccounts();\n  }, [userId]);\n\n  // 플랫폼 선택/해제 처리\n  const handlePlatformToggle = (platform) => {\n    if (selectedPlatforms.includes(platform)) {\n      setSelectedPlatforms(selectedPlatforms.filter((p) => p !== platform));\n    } else {\n      setSelectedPlatforms([...selectedPlatforms, platform]);\n    }\n  };\n\n  // 게시물 생성\n  const handleGenerate = async () => {\n    if (selectedPlatforms.length === 0) return;\n\n    setIsGenerating(true);\n    setError(null);\n\n    try {\n      const posts = {};\n\n      // 선택한 플랫폼별로 게시물 생성\n      for (const platform of selectedPlatforms) {\n        const response = await socialMediaApi.generatePost(articleId, {\n          platform,\n          correctionId,\n          options: {\n            hasImage: false, // 필요시 이미지 포함 여부 설정\n            userId,\n          },\n        });\n\n        if (response.data.success) {\n          posts[platform] = response.data.data;\n        }\n      }\n\n      setGeneratedPosts(posts);\n    } catch (err) {\n      console.error(\"게시물 생성 오류:\", err);\n      setError(\"소셜 미디어 게시물 생성에 실패했습니다\");\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  // 게시물 게시\n  const handlePublish = async () => {\n    setIsPublishing(true);\n    setError(null);\n\n    try {\n      const results = [];\n\n      // 생성된 게시물 게시\n      for (const platform of selectedPlatforms) {\n        if (generatedPosts[platform]) {\n          const response = await socialMediaApi.publishPost(\n            generatedPosts[platform]._id,\n            userId\n          );\n\n          if (response.data.success) {\n            results.push(response.data.data);\n          }\n        }\n      }\n\n      if (results.length > 0) {\n        alert(`${results.length}개의 소셜 미디어에 게시되었습니다.`);\n        onClose();\n      } else {\n        setError(\"게시에 실패했습니다\");\n      }\n    } catch (err) {\n      console.error(\"게시 오류:\", err);\n      setError(\"게시 과정에서 오류가 발생했습니다\");\n    } finally {\n      setIsPublishing(false);\n    }\n  };\n\n  // 모달 외부 클릭 시 닫기\n  const handleOutsideClick = (e) => {\n    if (e.target.className === \"modal-overlay\") {\n      onClose();\n    }\n  };\n\n  return (\n    <div\n      className=\"modal-overlay\"\n      onClick={handleOutsideClick}\n      style={styles.overlay}\n    >\n      <div className=\"modal-content\" style={styles.content}>\n        <h2 style={styles.title}>소셜 미디어 공유</h2>\n\n        <div className=\"platform-selection\" style={styles.section}>\n          <h3 style={styles.sectionTitle}>공유할 플랫폼 선택</h3>\n          {platforms.length === 0 ? (\n            <p style={styles.message}>연결된 소셜 미디어 계정이 없습니다.</p>\n          ) : (\n            <div style={styles.platformList}>\n              {platforms.map((platform) => (\n                <div key={platform.id} style={styles.platformItem}>\n                  <input\n                    type=\"checkbox\"\n                    id={platform.platform}\n                    checked={selectedPlatforms.includes(platform.platform)}\n                    onChange={() => handlePlatformToggle(platform.platform)}\n                  />\n                  <label\n                    htmlFor={platform.platform}\n                    style={styles.platformLabel}\n                  >\n                    {platform.platform} ({platform.username})\n                  </label>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n\n        {selectedPlatforms.length > 0 &&\n          !isGenerating &&\n          Object.keys(generatedPosts).length === 0 && (\n            <button\n              onClick={handleGenerate}\n              disabled={isGenerating}\n              style={styles.primaryButton}\n            >\n              {isGenerating ? \"생성 중...\" : \"게시물 생성하기\"}\n            </button>\n          )}\n\n        {Object.keys(generatedPosts).length > 0 && (\n          <div className=\"generated-posts\" style={styles.section}>\n            <h3 style={styles.sectionTitle}>생성된 게시물 미리보기</h3>\n            {selectedPlatforms.map(\n              (platform) =>\n                generatedPosts[platform] && (\n                  <div key={platform} style={styles.postPreview}>\n                    <h4 style={styles.platformName}>{platform}</h4>\n                    <textarea\n                      value={generatedPosts[platform]?.adaptedText || \"\"}\n                      onChange={(e) => {\n                        const updated = { ...generatedPosts };\n                        updated[platform].adaptedText = e.target.value;\n                        setGeneratedPosts(updated);\n                      }}\n                      style={styles.textarea}\n                      rows={5}\n                    />\n                  </div>\n                )\n            )}\n\n            <button\n              onClick={handlePublish}\n              disabled={isPublishing}\n              style={styles.primaryButton}\n            >\n              {isPublishing ? \"게시 중...\" : \"선택한 플랫폼에 게시하기\"}\n            </button>\n          </div>\n        )}\n\n        {error && <div style={styles.error}>{error}</div>}\n\n        <button onClick={onClose} style={styles.closeButton}>\n          닫기\n        </button>\n      </div>\n    </div>\n  );\n};\n\n// 인라인 스타일\nconst styles = {\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    zIndex: 1000,\n  },\n  content: {\n    backgroundColor: \"#fff\",\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    width: \"90%\",\n    maxWidth: \"600px\",\n    maxHeight: \"90vh\",\n    overflow: \"auto\",\n    boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.2)\",\n  },\n  title: {\n    fontSize: \"24px\",\n    marginTop: 0,\n    marginBottom: \"20px\",\n    color: \"#333\",\n  },\n  section: {\n    marginBottom: \"20px\",\n  },\n  sectionTitle: {\n    fontSize: \"18px\",\n    marginTop: 0,\n    marginBottom: \"10px\",\n    color: \"#333\",\n  },\n  message: {\n    color: \"#666\",\n    fontStyle: \"italic\",\n  },\n  platformList: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"10px\",\n  },\n  platformItem: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  platformLabel: {\n    marginLeft: \"8px\",\n    color: \"#333\",\n  },\n  postPreview: {\n    marginBottom: \"15px\",\n    padding: \"10px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\",\n  },\n  platformName: {\n    margin: \"0 0 10px 0\",\n    color: \"#333\",\n    fontSize: \"16px\",\n    textTransform: \"capitalize\",\n  },\n  textarea: {\n    width: \"100%\",\n    padding: \"8px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\",\n    resize: \"vertical\",\n    fontFamily: \"inherit\",\n    fontSize: \"14px\",\n  },\n  primaryButton: {\n    backgroundColor: \"#007bff\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    padding: \"10px 15px\",\n    fontSize: \"14px\",\n    cursor: \"pointer\",\n    marginRight: \"10px\",\n    marginTop: \"10px\",\n  },\n  closeButton: {\n    backgroundColor: \"#6c757d\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    padding: \"10px 15px\",\n    fontSize: \"14px\",\n    cursor: \"pointer\",\n  },\n  error: {\n    backgroundColor: \"#f8d7da\",\n    color: \"#721c24\",\n    padding: \"10px\",\n    borderRadius: \"4px\",\n    marginBottom: \"15px\",\n  },\n};\n\nexport default SocialShareModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}