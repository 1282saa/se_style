{"ast":null,"code":"var _jsxFileName = \"/Users/yeong-gwang/Desktop/work/\\u1109\\u1165\\u110B\\u116E\\u11AF\\u1100\\u1167\\u11BC\\u110C\\u1166\\u1109\\u1175\\u11AB\\u1106\\u116E\\u11AB/\\u1100\\u1162\\u1107\\u1161\\u11AF\\u110C\\u1161\\u11A8\\u110B\\u1165\\u11B8/\\u1106\\u1161\\u11BD\\u110E\\u116E\\u11B7\\u1112\\u1167\\u11BC\\u1100\\u116D\\u110B\\u1167\\u11AF\\u1109\\u1175\\u1109\\u1173\\u1110\\u1166\\u11B7\\u1100\\u1162\\u1107\\u1161\\u11AF/dual-proofreading-service/frontend/src/pages/ProofreadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { articleApi } from \"../services/api\";\nimport styled from \"styled-components\";\n\n// 스타일 컴포넌트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n_c = PageContainer;\nconst Title = styled.h1`\n  font-size: 24px;\n  margin-bottom: 20px;\n  color: #333;\n`;\n_c2 = Title;\nconst TextAreaContainer = styled.div`\n  margin-bottom: 20px;\n`;\n_c3 = TextAreaContainer;\nconst StyledTextArea = styled.textarea`\n  width: 100%;\n  min-height: 200px;\n  padding: 12px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 16px;\n  font-family: \"Noto Sans KR\", sans-serif;\n  resize: vertical;\n`;\n_c4 = StyledTextArea;\nconst Button = styled.button`\n  background-color: #007bff;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n\n  &:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n  }\n`;\n_c5 = Button;\nconst ResultsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-top: 30px;\n`;\n_c6 = ResultsContainer;\nconst ResultCard = styled.div`\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 15px;\n  background-color: #f9f9f9;\n`;\n_c7 = ResultCard;\nconst ResultTitle = styled.h3`\n  margin-top: 0;\n  margin-bottom: 10px;\n  color: #333;\n`;\n_c8 = ResultTitle;\nconst ResultText = styled.p`\n  white-space: pre-wrap;\n  line-height: 1.6;\n  color: #444;\n`;\n_c9 = ResultText;\nconst LoadingSpinner = styled.div`\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #3498db;\n  border-radius: 50%;\n  width: 30px;\n  height: 30px;\n  animation: spin 2s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n_c0 = LoadingSpinner;\nconst ErrorMessage = styled.p`\n  color: #dc3545;\n  background-color: #f8d7da;\n  padding: 10px;\n  border-radius: 4px;\n  margin-top: 20px;\n`;\n_c1 = ErrorMessage;\nconst ProofreadPage = () => {\n  _s();\n  const [articleText, setArticleText] = useState(\"\");\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleTextChange = e => {\n    setArticleText(e.target.value);\n  };\n  const handleSubmit = async () => {\n    if (!articleText.trim()) {\n      setError(\"텍스트를 입력해주세요.\");\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n      setResults(null);\n\n      // API 호출\n      const response = await articleApi.createArticle({\n        originalText: articleText,\n        userId: \"user123\" // 실제 환경에서는 로그인한 사용자 ID로 대체\n      });\n      const articleId = response.data.data.articleId;\n\n      // 교정 실행\n      const proofreadResponse = await articleApi.proofreadArticle(articleId);\n\n      // 교정 결과 조회\n      const correctionResponse = await articleApi.getCorrections(articleId);\n\n      // 결과 설정\n      const correctionData = correctionResponse.data.data;\n\n      // 두 가지 버전의 교정 결과 설정\n      const minimalCorrection = correctionData.corrections.find(c => c.promptType === 1);\n      const enhancedCorrection = correctionData.corrections.find(c => c.promptType === 2);\n      setResults({\n        articleId,\n        original: articleText,\n        minimal: (minimalCorrection === null || minimalCorrection === void 0 ? void 0 : minimalCorrection.correctedText) || \"교정 결과를 불러올 수 없습니다.\",\n        enhanced: (enhancedCorrection === null || enhancedCorrection === void 0 ? void 0 : enhancedCorrection.correctedText) || \"교정 결과를 불러올 수 없습니다.\"\n      });\n    } catch (err) {\n      console.error(\"교정 중 오류 발생:\", err);\n      setError(\"교정을 처리하는 중 오류가 발생했습니다. 나중에 다시 시도해주세요.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 빠른 교정 API (한 번의 호출로 두 가지 결과 받기)\n  const handleQuickProofread = async () => {\n    if (!articleText.trim()) {\n      setError(\"텍스트를 입력해주세요.\");\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n      setResults(null);\n\n      // 빠른 교정 API 호출\n      const response = await fetch(\"http://localhost:3003/api/articles/quick-proofread\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text: articleText,\n          userId: \"user123\",\n          // 실제 환경에서는 로그인한 사용자 ID로 대체\n          metadata: {}\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"API 요청 실패\");\n      }\n      const result = await response.json();\n      if (result.success) {\n        setResults({\n          articleId: result.data.articleId,\n          original: articleText,\n          minimal: result.data.correction1.text,\n          enhanced: result.data.correction2.text\n        });\n      } else {\n        throw new Error(result.message || \"교정 처리 실패\");\n      }\n    } catch (err) {\n      console.error(\"교정 중 오류 발생:\", err);\n      setError(\"교정을 처리하는 중 오류가 발생했습니다. 나중에 다시 시도해주세요.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"\\uAE30\\uC0AC \\uAD50\\uC815 \\uC2DC\\uC2A4\\uD15C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextAreaContainer, {\n      children: /*#__PURE__*/_jsxDEV(StyledTextArea, {\n        placeholder: \"\\uAD50\\uC815\\uD560 \\uAE30\\uC0AC \\uD14D\\uC2A4\\uD2B8\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n        value: articleText,\n        onChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleQuickProofread,\n      disabled: loading || !articleText.trim(),\n      children: loading ? \"교정 중...\" : \"교정하기\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }, this), results && /*#__PURE__*/_jsxDEV(ResultsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ResultCard, {\n        children: [/*#__PURE__*/_jsxDEV(ResultTitle, {\n          children: \"\\uC6D0\\uBB38\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ResultText, {\n          children: results.original\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResultCard, {\n        children: [/*#__PURE__*/_jsxDEV(ResultTitle, {\n          children: \"\\uCD5C\\uC18C \\uAD50\\uC815 \\uACB0\\uACFC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ResultText, {\n          children: results.minimal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResultCard, {\n        children: [/*#__PURE__*/_jsxDEV(ResultTitle, {\n          children: \"\\uC801\\uADF9\\uC801 \\uAD50\\uC815 \\uACB0\\uACFC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ResultText, {\n          children: results.enhanced\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n_s(ProofreadPage, \"kol6D/e7ckYW/Bw2wk7eEcb0ds0=\");\n_c10 = ProofreadPage;\nexport default ProofreadPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10;\n$RefreshReg$(_c, \"PageContainer\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"TextAreaContainer\");\n$RefreshReg$(_c4, \"StyledTextArea\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"ResultsContainer\");\n$RefreshReg$(_c7, \"ResultCard\");\n$RefreshReg$(_c8, \"ResultTitle\");\n$RefreshReg$(_c9, \"ResultText\");\n$RefreshReg$(_c0, \"LoadingSpinner\");\n$RefreshReg$(_c1, \"ErrorMessage\");\n$RefreshReg$(_c10, \"ProofreadPage\");","map":{"version":3,"names":["React","useState","articleApi","styled","jsxDEV","_jsxDEV","PageContainer","div","_c","Title","h1","_c2","TextAreaContainer","_c3","StyledTextArea","textarea","_c4","Button","button","_c5","ResultsContainer","_c6","ResultCard","_c7","ResultTitle","h3","_c8","ResultText","p","_c9","LoadingSpinner","_c0","ErrorMessage","_c1","ProofreadPage","_s","articleText","setArticleText","results","setResults","loading","setLoading","error","setError","handleTextChange","e","target","value","handleSubmit","trim","response","createArticle","originalText","userId","articleId","data","proofreadResponse","proofreadArticle","correctionResponse","getCorrections","correctionData","minimalCorrection","corrections","find","c","promptType","enhancedCorrection","original","minimal","correctedText","enhanced","err","console","handleQuickProofread","fetch","method","headers","body","JSON","stringify","text","metadata","ok","Error","result","json","success","correction1","correction2","message","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","onClick","disabled","_c10","$RefreshReg$"],"sources":["/Users/yeong-gwang/Desktop/work/서울경제신문/개발작업/맞춤형교열시스템개발/dual-proofreading-service/frontend/src/pages/ProofreadPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { articleApi } from \"../services/api\";\nimport styled from \"styled-components\";\n\n// 스타일 컴포넌트\nconst PageContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nconst Title = styled.h1`\n  font-size: 24px;\n  margin-bottom: 20px;\n  color: #333;\n`;\n\nconst TextAreaContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst StyledTextArea = styled.textarea`\n  width: 100%;\n  min-height: 200px;\n  padding: 12px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 16px;\n  font-family: \"Noto Sans KR\", sans-serif;\n  resize: vertical;\n`;\n\nconst Button = styled.button`\n  background-color: #007bff;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n\n  &:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n  }\n`;\n\nconst ResultsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-top: 30px;\n`;\n\nconst ResultCard = styled.div`\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 15px;\n  background-color: #f9f9f9;\n`;\n\nconst ResultTitle = styled.h3`\n  margin-top: 0;\n  margin-bottom: 10px;\n  color: #333;\n`;\n\nconst ResultText = styled.p`\n  white-space: pre-wrap;\n  line-height: 1.6;\n  color: #444;\n`;\n\nconst LoadingSpinner = styled.div`\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #3498db;\n  border-radius: 50%;\n  width: 30px;\n  height: 30px;\n  animation: spin 2s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst ErrorMessage = styled.p`\n  color: #dc3545;\n  background-color: #f8d7da;\n  padding: 10px;\n  border-radius: 4px;\n  margin-top: 20px;\n`;\n\nconst ProofreadPage = () => {\n  const [articleText, setArticleText] = useState(\"\");\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleTextChange = (e) => {\n    setArticleText(e.target.value);\n  };\n\n  const handleSubmit = async () => {\n    if (!articleText.trim()) {\n      setError(\"텍스트를 입력해주세요.\");\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n      setResults(null);\n\n      // API 호출\n      const response = await articleApi.createArticle({\n        originalText: articleText,\n        userId: \"user123\", // 실제 환경에서는 로그인한 사용자 ID로 대체\n      });\n\n      const articleId = response.data.data.articleId;\n\n      // 교정 실행\n      const proofreadResponse = await articleApi.proofreadArticle(articleId);\n\n      // 교정 결과 조회\n      const correctionResponse = await articleApi.getCorrections(articleId);\n\n      // 결과 설정\n      const correctionData = correctionResponse.data.data;\n\n      // 두 가지 버전의 교정 결과 설정\n      const minimalCorrection = correctionData.corrections.find(\n        (c) => c.promptType === 1\n      );\n      const enhancedCorrection = correctionData.corrections.find(\n        (c) => c.promptType === 2\n      );\n\n      setResults({\n        articleId,\n        original: articleText,\n        minimal:\n          minimalCorrection?.correctedText || \"교정 결과를 불러올 수 없습니다.\",\n        enhanced:\n          enhancedCorrection?.correctedText ||\n          \"교정 결과를 불러올 수 없습니다.\",\n      });\n    } catch (err) {\n      console.error(\"교정 중 오류 발생:\", err);\n      setError(\n        \"교정을 처리하는 중 오류가 발생했습니다. 나중에 다시 시도해주세요.\"\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 빠른 교정 API (한 번의 호출로 두 가지 결과 받기)\n  const handleQuickProofread = async () => {\n    if (!articleText.trim()) {\n      setError(\"텍스트를 입력해주세요.\");\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n      setResults(null);\n\n      // 빠른 교정 API 호출\n      const response = await fetch(\n        \"http://localhost:3003/api/articles/quick-proofread\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            text: articleText,\n            userId: \"user123\", // 실제 환경에서는 로그인한 사용자 ID로 대체\n            metadata: {},\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"API 요청 실패\");\n      }\n\n      const result = await response.json();\n\n      if (result.success) {\n        setResults({\n          articleId: result.data.articleId,\n          original: articleText,\n          minimal: result.data.correction1.text,\n          enhanced: result.data.correction2.text,\n        });\n      } else {\n        throw new Error(result.message || \"교정 처리 실패\");\n      }\n    } catch (err) {\n      console.error(\"교정 중 오류 발생:\", err);\n      setError(\n        \"교정을 처리하는 중 오류가 발생했습니다. 나중에 다시 시도해주세요.\"\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <PageContainer>\n      <Title>기사 교정 시스템</Title>\n\n      <TextAreaContainer>\n        <StyledTextArea\n          placeholder=\"교정할 기사 텍스트를 입력하세요...\"\n          value={articleText}\n          onChange={handleTextChange}\n        />\n      </TextAreaContainer>\n\n      <Button\n        onClick={handleQuickProofread}\n        disabled={loading || !articleText.trim()}\n      >\n        {loading ? \"교정 중...\" : \"교정하기\"}\n      </Button>\n\n      {loading && <LoadingSpinner />}\n\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n\n      {results && (\n        <ResultsContainer>\n          <ResultCard>\n            <ResultTitle>원문</ResultTitle>\n            <ResultText>{results.original}</ResultText>\n          </ResultCard>\n\n          <ResultCard>\n            <ResultTitle>최소 교정 결과</ResultTitle>\n            <ResultText>{results.minimal}</ResultText>\n          </ResultCard>\n\n          <ResultCard>\n            <ResultTitle>적극적 교정 결과</ResultTitle>\n            <ResultText>{results.enhanced}</ResultText>\n          </ResultCard>\n        </ResultsContainer>\n      )}\n    </PageContainer>\n  );\n};\n\nexport default ProofreadPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}